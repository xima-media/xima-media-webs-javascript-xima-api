var xima={api:{responsiveImages:function(window,document,$,undefined){var selectors={};function init(wrapperSelector,imageSelector){selectors={wrapper:wrapperSelector||"body",image:imageSelector||"img"}}function setResponsiveImages(){$(selectors.wrapper).each(function(){var $this=$(this);var gridElement={width:$this.width()};$(selectors.image,$(this)).each(function(){var $this=$(this);var srcsets=$this.data("srcset").split(",");var images=[];for(var i in srcsets){if(srcsets[i]){images.push({src:/(?:.(?!\d+w))+/.exec(srcsets[i])[0].trim(),width:/(\d+)(?:w)/.exec(srcsets[i])[1]})}}images.sort(function(a,b){return a.width-b.width});for(var j in images){if(images[j].width>=gridElement.width){$this.attr("src",images[j].src);break}else if(j==images.length-1){$this.attr("src",images[j].src)}}})})}window.onresize=setResponsiveImages;return{run:function(wrapperSelector,imageSelector){init(wrapperSelector,imageSelector);setResponsiveImages()}}}(window,document,jQuery),twitter:{bootstrap:function(){var errors={msg:{NoDefaultAnchor:"Es wurde kein Standard-Anchor festgelegt!",NoFunctionTab:'Die Funktion "tab" ist nicht definiert! Wurde tab.js (Twitter Bootstrap JS-PlugIn) eingefügt?'}};var selectedTabId=null;this.initTabs=function(default_anchor,selector_wrapper){var anchor="";if(!default_anchor){console.log(errors.msg.NoDefaultAnchor);return false}var selector_wrapper=selector_wrapper||"";var queryString=document.URL.split("?")[1];if(queryString){queryString=queryString.split("#")[0];if(queryString){var param,key;var params=queryString.split("&");for(key in params){param=params[key].split("=");if(param[0]==="tab"){anchor=param[1]}}}}anchor=anchor===""?default_anchor:anchor;var $anchor=jQuery(selector_wrapper+' a[href="#'+anchor+'"][data-toggle="tab"]');if(!$anchor.get(0)){$anchor=jQuery(selector_wrapper+' a[href="#'+default_anchor+'"][data-toggle="tab"]')}jQuery(selector_wrapper+' a[data-toggle="tab"]').on("shown.bs.tab",function(e){selectedTabId=jQuery(e.target).attr("href").split("#")[1]});if(typeof $anchor.tab==="function"){$anchor.tab("show");selectedTabId=$anchor.attr("href").split("#")[1];return true}else{console.log(errors.msg.NoFunctionTab);return false}};this.__defineGetter__("selectedTabId",function(){return selectedTabId});this.__defineSetter__("selectedTabId",function(val){selectedTabId=val})}},googlemaps:function(){var _map=null;var _mapCanvas=null;var _oms=null;var _mapInit=false;var _infoWindows=[];var _markers=[];var _polylines=[];var _mapLayers={};var _mapData={};var _convertRules={backgroundColor:"String",center:"google.maps.LatLng",disableDefaultUI:"Boolean",disableDoubleClickZoom:"Boolean",draggable:"Boolean",draggableCursor:"String",draggingCursor:"String",heading:"Number",keyboardShortcuts:"Boolean",mapMaker:"Boolean",mapTypeControl:"Boolean",mapTypeControlOptions:"google.maps.MapTypeControlOptions",mapTypeId:"google.maps.MapTypeId",maxZoom:"Number",minZoom:"Number",noClear:"Boolean",overviewMapControl:"Boolean",overviewMapControlOptions:"google.maps.OverviewMapControlOptions",panControl:"Boolean",panControlOptions:"google.maps.PanControlOptions",rotateControl:"Boolean",rotateControlOptions:"google.maps.RotateControlOptions",scaleControl:"Boolean",scaleControlOptions:"google.maps.ScaleControlOptions",scrollwheel:"Boolean",streetView:"google.maps.StreetViewPanorama",streetViewControl:"Boolean",streetViewControlOptions:"google.maps.StreetViewControlOptions",styles:"google.maps.MapTypeStyle",tilt:"Number",zoom:"Number",zoomControl:"Boolean",zoomControlOptions:"google.maps.ZoomControlOptions"};var _mapOptions={center:new google.maps.LatLng(51.06966,13.778158),zoom:8};var _omsOptions={keepSpiderfied:true};var errors={msg:{IsNotJson:"Die angegebene Variable ist keine JSON!",MissingMapDataProperty:"Dem MapData-Object fehlen die benötigten Eigenschaften!",MissingMapCanvas:"Es wird ein Map-Canvas benötigt!",MissingMap:"Fehlende GoogleMaps Instanz!"}};this.initGoogleMaps=function(useLatLngBounds,useMarkerClusterer){if(_mapInit===true){return this}if(!_mapCanvas){console.log(errors.msg.MissingMapCanvas);return this}_mapInit=true;_map=new google.maps.Map(_mapCanvas,_mapOptions);for(var key in _mapLayers){if(_mapLayers.hasOwnProperty(key)){_mapLayers[key].setMap(_map)}}return this};this.applyMapData=function(useLatLngBounds,useMarkerClusterer){if(!_map){console.log(errors.msg.MissingMap);return this}if(jQuery.isEmptyObject(_mapData)||!_mapData.points){console.log(errors.msg.MissingMapDataProperty);return this}var useLatLngBounds=typeof useLatLngBounds!=="boolean"?true:useLatLngBounds;var useMarkerClusterer=typeof useMarkerClusterer!=="boolean"?true:useMarkerClusterer;if(useLatLngBounds){var bounds=new google.maps.LatLngBounds}var lengthPoints=!jQuery.isEmptyObject(_mapData)&&_mapData.points?Object.keys(_mapData.points).length:0;var layers=[];var myTitle;var myLatlng;var myIcon;var j;if(useMarkerClusterer){this.createOverlappingMarkerSpiderfier()}var currentLat;var currentLang;for(var i=0;i<lengthPoints;i++){currentLat=parseFloat(_mapData.points[i].lat);currentLang=parseFloat(_mapData.points[i].lng);if(!isNaN(currentLat)&&!isNaN(currentLang)){myLatlng=new google.maps.LatLng(currentLat,currentLang);myTitle=_mapData.points[i].title?_mapData.points[i].title:"";myIcon=_mapData.points[i].icon?_mapData.points[i].icon:null;this.addMarker(myLatlng,myTitle,myIcon);j=_markers.length-1;if(useLatLngBounds){bounds.extend(_markers[j].position)}_markers[j].setMap(_map)}}if(useLatLngBounds&&_markers.length>0){_map.fitBounds(bounds);var listener=google.maps.event.addListener(_map,"zoom_changed",function(){if(_map.getZoom()>_mapOptions.zoom)_map.setZoom(_mapOptions.zoom);google.maps.event.removeListener(listener)})}};this.closeInfoWindows=function(){if(_infoWindows.length>0){_infoWindows[0].set("marker",null);_infoWindows[0].close();_infoWindows.length=0}};this.setMapOptions=function(options){if(options){if(xima.api.functions.convertDataType(options,_convertRules)){_mapOptions=options}}return this};this.addMapOptions=function(options){if(options){if(xima.api.functions.convertDataType(options,_convertRules)){jQuery.extend(_mapOptions,options)}}return this};this.getMapOptions=function(){return _mapOptions};this.setMapData=function(mapData){if(jQuery.type(mapData)==="array"||jQuery.type(mapData)==="object"){_mapData=mapData}else if(jQuery.type(mapData)==="string"){json=mapData;if(jQuery(mapData).length!==0){json=jQuery(mapData).val()}try{_mapData=jQuery.parseJSON(json)}catch(e){console.log(errors.msg.IsNotJson)}}if(jQuery.isEmptyObject(_mapData)||!_mapData.points){console.log(errors.msg.MissingMapDataProperty)}else if(_mapData.mapOptions){this.addMapOptions(_mapData.mapOptions)}return this};this.setMapCanvas=function(mapCanvas){_mapCanvas=jQuery(mapCanvas).get(0);return this};this.addLayers=function(kml){if(typeof kml==="object"){for(var key in kml){_mapLayers[key]=new google.maps.KmlLayer({url:kml[key],preserveViewport:true})}}return this};this.removeLayer=function(key){if(key&&_mapLayers.key){delete _mapLayers.key}return this};this.addMarker=function(location,title,icon,windowContent){if(!_map){console.log(errors.msg.MissingMap);return this}var self=this;_markers.push(new google.maps.Marker({position:location,title:title,icon:icon,map:_map}));j=_markers.length-1;if(_oms){_oms.addMarker(_markers[j])}if(windowContent!==false){var windowContent=windowContent?windowContent:_mapData.points[j].windowContent;google.maps.event.addListener(_markers[j],"click",function(k){return function(){self.closeInfoWindows();var infoWindow=new google.maps.InfoWindow({content:windowContent});infoWindow.open(_map,_markers[k]);_infoWindows[0]=infoWindow}}(j))}return this};this.setAllMarkersMap=function(map){for(var i=_markers.length-1;i>=0;i--){_markers[i].setMap(map)}return this};this.clearMarkers=function(){this.setAllMarkersMap(null);return this};this.deleteMarkers=function(){this.clearMarkers();_markers=[];return this};this.showMarkers=function(){if(_map){this.setAllMarkersMap(_map)}return this};this.createOverlappingMarkerSpiderfier=function(){if(_map){_oms=new OverlappingMarkerSpiderfier(_map,_omsOptions)}return this};this.getOMSOptions=function(){return _omsOptions};this.drawPolyline=function(key,routeCoords,options){var path=[];if(routeCoords){_mapData.routes[key]=jQuery.parseJSON(routeCoords)}var lengthCoords=!jQuery.isEmptyObject(_mapData)&&!jQuery.isEmptyObject(_mapData.routes)&&_mapData.routes[key]?Object.keys(_mapData.routes[key]).length:0;for(var i=0;i<lengthCoords;i++){if(!_mapData.routes[key][i].lat||!_mapData.routes[key][i].lng){continue}path.push(new google.maps.LatLng(parseFloat(_mapData.routes[key][i].lat),parseFloat(_mapData.routes[key][i].lng)))}var polylineOptions={path:path,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2};if(options){jQuery.extend(polylineOptions,options)}_polylines[key]=new google.maps.Polyline(polylineOptions);if(_map){_polylines[key].setMap(_map)}return this}},openlayers:function(window,document,$,undefined){var selectors={};var maps=[];var map=function(parameters){var _this=this;this.map=new ol.Map({target:parameters.target});this.addLayer=function(layer){_this.map.addLayer(layer)};this.initialize=function(){if(parameters.hasOwnProperty("baseLayerUrl")){var baseLayer=new ol.layer.Tile({source:new ol.source.XYZ({attributions:[new ol.Attribution({html:parameters.attribution||""})],tilePixelRatio:2,url:parameters.baseLayerUrl}),name:"baseLayer",title:"Base Layer"});_this.map.addLayer(baseLayer)}if(parameters.hasOwnProperty("view")){var view=new ol.View({center:ol.proj.transform([parameters.view.lon,parameters.view.lat],"EPSG:4326","EPSG:3857"),zoom:parameters.view.zoom||7});_this.map.setView(view)}};this.initialize()};function initialize(wrapperSelector,mapSelector){selectors={wrapper:wrapperSelector,map:mapSelector}}function getArrayOfMaps(parameters){$(selectors.wrapper).each(function(){$(selectors.map,$(this)).each(function(){maps.push(new map({target:$(this).get(0),baseLayerUrl:parameters.baseLayerUrl,view:parameters.view,attribution:parameters.attribution}))})});return maps}return{createMaps:function(wrapperSelector,mapSelector,baseLayerUrl,lat,lon,zoom,attribution){initialize(wrapperSelector,mapSelector);return getArrayOfMaps({baseLayerUrl:baseLayerUrl,view:{lat:lat,lon:lon,zoom:zoom},attribution:attribution})}}}(window,document,jQuery),functions:{convertDataType:function(data,convertRules){if(!convertRules||typeof data!=="object"){return false}var success=true;for(var data_key in data){if(!convertRules[data_key])continue;var classes=convertRules[data_key].split(".");var className;className=window[classes[0]];for(var i=1;i<classes.length;i++){className=className[classes[i]]}if(data[data_key]instanceof className||typeof data[data_key]===className){continue}if(typeof data[data_key]!==className){try{data[data_key]=className(data[data_key])}catch(e){try{data[data_key]=new className}catch(e){console.log("Cannot convert "+data[data_key]+" to "+className);success=false}}}}return success}}}};